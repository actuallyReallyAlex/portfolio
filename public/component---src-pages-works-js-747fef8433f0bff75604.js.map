{"version":3,"sources":["webpack:///./src/pages/works.js","webpack:///./src/components/sectionHeading.js","webpack:///./node_modules/@material-ui/core/esm/Link/Link.js","webpack:///./src/components/work.js","webpack:///./node_modules/@material-ui/core/esm/Icon/Icon.js","webpack:///./node_modules/@material-ui/core/esm/Avatar/Avatar.js"],"names":["Works","data","displayHeader","title","className","worksStyles","container","heading","allContentfulPortfolioWork","edges","map","node","description","iconBackground","iconString","key","id","slug","SectionHeading","sectionHeadingStyles","variant","forwardRef","props","ref","classes","_props$color","color","_props$component","component","onBlur","onFocus","TypographyClasses","_props$underline","underline","_props$variant","other","_useIsFocusVisible","isFocusVisible","onBlurVisible","focusVisibleRef","_React$useState","useState","focusVisible","setFocusVisible","handlerRef","createElement","Typography","root","concat","button","event","withStyles","underlineNone","textDecoration","underlineHover","underlineAlways","position","WebkitTapHighlightColor","backgroundColor","outline","border","margin","borderRadius","padding","cursor","userSelect","verticalAlign","borderStyle","name","Work","Box","workStyles","Avatar","avatar","style","background","Icon","icon","link","href","Component","_props$fontSize","fontSize","muiName","theme","typography","pxToRem","width","height","overflow","flexShrink","colorPrimary","palette","primary","main","colorSecondary","secondary","colorAction","action","active","colorError","error","colorDisabled","disabled","fontSizeInherit","fontSizeSmall","fontSizeLarge","alt","childrenProp","children","classNameProp","imgProps","sizes","src","srcSet","img","system","colorDefault","display","alignItems","justifyContent","fontFamily","lineHeight","type","grey","textAlign","objectFit"],"mappings":"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","file":"component---src-pages-works-js-747fef8433f0bff75604.js","sourcesContent":["import React from \"react\";\nimport Layout from \"../components/layout\";\nimport { Box } from \"@material-ui/core\";\nimport SectionHeading from \"../components/sectionHeading\";\nimport worksStyles from \"../sections/works.module.scss\";\nimport Work from \"../components/work\";\nimport { useStaticQuery, graphql } from \"gatsby\";\nimport Helmet from \"../components/helmet\";\n\nconst Works = () => {\n  const data = useStaticQuery(graphql`\n    query {\n      allContentfulPortfolioWork {\n        edges {\n          node {\n            id\n            title\n            description\n            slug\n            iconString\n            iconBackground\n          }\n        }\n      }\n    }\n  `);\n\n  return (\n    <Layout displayHeader={true}>\n      <Helmet title=\"Works\" />\n      <Box className={worksStyles.container}>\n        <Box>\n          <SectionHeading heading=\"Works\" />\n          {data.allContentfulPortfolioWork.edges.map(({ node }) => (\n            <Work\n              description={node.description}\n              iconBackground={node.iconBackground}\n              iconString={node.iconString}\n              key={node.id}\n              slug={node.slug}\n              title={node.title}\n            />\n          ))}\n        </Box>\n      </Box>\n    </Layout>\n  );\n};\n\nexport default Works;\n","import React from \"react\";\nimport { Box, Typography } from \"@material-ui/core\";\nimport sectionHeadingStyles from \"./sectionHeading.module.scss\";\n\nconst SectionHeading = ({ heading }) => {\n  return (\n    <Box className={sectionHeadingStyles.container}>\n      <Typography variant=\"h2\">{heading}</Typography>\n    </Box>\n  );\n};\n\nexport default SectionHeading;\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { capitalize } from '../utils/helpers';\nimport withStyles from '../styles/withStyles';\nimport { useIsFocusVisible } from '../utils/focusVisible';\nimport { useForkRef } from '../utils/reactHelpers';\nimport Typography from '../Typography';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {},\n\n  /* Styles applied to the root element if `underline=\"none\"`. */\n  underlineNone: {\n    textDecoration: 'none'\n  },\n\n  /* Styles applied to the root element if `underline=\"hover\"`. */\n  underlineHover: {\n    textDecoration: 'none',\n    '&:hover': {\n      textDecoration: 'underline'\n    }\n  },\n\n  /* Styles applied to the root element if `underline=\"always\"`. */\n  underlineAlways: {\n    textDecoration: 'underline'\n  },\n  // Same reset as ButtonBase.root\n\n  /* Styles applied to the root element if `component=\"button\"`. */\n  button: {\n    position: 'relative',\n    // Remove grey highlight\n    WebkitTapHighlightColor: 'transparent',\n    backgroundColor: 'transparent',\n    // Reset default value\n    // We disable the focus ring for mouse, touch and keyboard users.\n    outline: 0,\n    border: 0,\n    margin: 0,\n    // Remove the margin in Safari\n    borderRadius: 0,\n    padding: 0,\n    // Remove the padding in Firefox\n    cursor: 'pointer',\n    userSelect: 'none',\n    verticalAlign: 'middle',\n    '-moz-appearance': 'none',\n    // Reset\n    '-webkit-appearance': 'none',\n    // Reset\n    '&::-moz-focus-inner': {\n      borderStyle: 'none' // Remove Firefox dotted outline.\n\n    },\n    '&$focusVisible': {\n      outline: 'auto'\n    }\n  },\n\n  /* Pseudo-class applied to the root element if the link is keyboard focused. */\n  focusVisible: {}\n};\nvar Link = React.forwardRef(function Link(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'primary' : _props$color,\n      _props$component = props.component,\n      component = _props$component === void 0 ? 'a' : _props$component,\n      onBlur = props.onBlur,\n      onFocus = props.onFocus,\n      TypographyClasses = props.TypographyClasses,\n      _props$underline = props.underline,\n      underline = _props$underline === void 0 ? 'hover' : _props$underline,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'inherit' : _props$variant,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"color\", \"component\", \"onBlur\", \"onFocus\", \"TypographyClasses\", \"underline\", \"variant\"]);\n\n  var _useIsFocusVisible = useIsFocusVisible(),\n      isFocusVisible = _useIsFocusVisible.isFocusVisible,\n      onBlurVisible = _useIsFocusVisible.onBlurVisible,\n      focusVisibleRef = _useIsFocusVisible.ref;\n\n  var _React$useState = React.useState(false),\n      focusVisible = _React$useState[0],\n      setFocusVisible = _React$useState[1];\n\n  var handlerRef = useForkRef(ref, focusVisibleRef);\n\n  var handleBlur = function handleBlur(event) {\n    if (focusVisible) {\n      onBlurVisible();\n      setFocusVisible(false);\n    }\n\n    if (onBlur) {\n      onBlur(event);\n    }\n  };\n\n  var handleFocus = function handleFocus(event) {\n    if (isFocusVisible(event)) {\n      setFocusVisible(true);\n    }\n\n    if (onFocus) {\n      onFocus(event);\n    }\n  };\n\n  return React.createElement(Typography, _extends({\n    className: clsx(classes.root, classes[\"underline\".concat(capitalize(underline))], className, focusVisible && classes.focusVisible, {\n      button: classes.button\n    }[component]),\n    classes: TypographyClasses,\n    color: color,\n    component: component,\n    onBlur: handleBlur,\n    onFocus: handleFocus,\n    ref: handlerRef,\n    variant: variant\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Link.propTypes = {\n  /**\n   * The content of the link.\n   */\n  children: PropTypes.node.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the link.\n   */\n  color: PropTypes.oneOf(['default', 'error', 'inherit', 'primary', 'secondary', 'textPrimary', 'textSecondary']),\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a DOM element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * @ignore\n   */\n  onBlur: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onFocus: PropTypes.func,\n\n  /**\n   * `classes` prop applied to the [`Typography`](/api/typography/) element.\n   */\n  TypographyClasses: PropTypes.object,\n\n  /**\n   * Controls when the link should have an underline.\n   */\n  underline: PropTypes.oneOf(['none', 'hover', 'always']),\n\n  /**\n   * Applies the theme typography styles.\n   */\n  variant: PropTypes.string\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiLink'\n})(Link);","import React from \"react\";\nimport { Avatar, Box, Link, Typography, Icon } from \"@material-ui/core\";\nimport workStyles from \"./work.module.scss\";\n\nconst Work = ({ description, iconBackground, iconString, slug, title }) => {\n  return (\n    <Box className={workStyles.container}>\n      <Avatar\n        className={workStyles.avatar}\n        style={{ background: iconBackground }}\n      >\n        <Icon className={`${iconString} ${workStyles.icon}`} />\n      </Avatar>\n      <Box>\n        <Typography className={workStyles.title} variant=\"h4\">\n          {title}\n        </Typography>\n        <Typography>{description}</Typography>\n        <Typography className={workStyles.link}>\n          <Link href={`/works/${slug}`}>Learn More</Link>\n        </Typography>\n      </Box>\n    </Box>\n  );\n};\n\nexport default Work;\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport { capitalize } from '../utils/helpers';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      userSelect: 'none',\n      fontSize: theme.typography.pxToRem(24),\n      width: '1em',\n      height: '1em',\n      // Chrome fix for https://bugs.chromium.org/p/chromium/issues/detail?id=820541\n      // To remove at some point.\n      overflow: 'hidden',\n      flexShrink: 0\n    },\n\n    /* Styles applied to the root element if `color=\"primary\"`. */\n    colorPrimary: {\n      color: theme.palette.primary.main\n    },\n\n    /* Styles applied to the root element if `color=\"secondary\"`. */\n    colorSecondary: {\n      color: theme.palette.secondary.main\n    },\n\n    /* Styles applied to the root element if `color=\"action\"`. */\n    colorAction: {\n      color: theme.palette.action.active\n    },\n\n    /* Styles applied to the root element if `color=\"error\"`. */\n    colorError: {\n      color: theme.palette.error.main\n    },\n\n    /* Styles applied to the root element if `color=\"disabled\"`. */\n    colorDisabled: {\n      color: theme.palette.action.disabled\n    },\n    fontSizeInherit: {\n      fontSize: 'inherit'\n    },\n\n    /* Styles applied to the root element if `fontSize=\"small\"`. */\n    fontSizeSmall: {\n      fontSize: theme.typography.pxToRem(20)\n    },\n\n    /* Styles applied to the root element if `fontSize=\"large\"`. */\n    fontSizeLarge: {\n      fontSize: theme.typography.pxToRem(36)\n    }\n  };\n};\nvar Icon = React.forwardRef(function Icon(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'inherit' : _props$color,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'span' : _props$component,\n      _props$fontSize = props.fontSize,\n      fontSize = _props$fontSize === void 0 ? 'default' : _props$fontSize,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"color\", \"component\", \"fontSize\"]);\n\n  return React.createElement(Component, _extends({\n    className: clsx('material-icons', classes.root, className, color !== 'inherit' && classes[\"color\".concat(capitalize(color))], fontSize !== 'default' && classes[\"fontSize\".concat(capitalize(fontSize))]),\n    \"aria-hidden\": true,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Icon.propTypes = {\n  /**\n   * The name of the icon font ligature.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['inherit', 'primary', 'secondary', 'action', 'error', 'disabled']),\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a DOM element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * The fontSize applied to the icon. Defaults to 24px, but can be configure to inherit font size.\n   */\n  fontSize: PropTypes.oneOf(['inherit', 'default', 'small', 'large'])\n} : void 0;\nIcon.muiName = 'Icon';\nexport default withStyles(styles, {\n  name: 'MuiIcon'\n})(Icon);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      position: 'relative',\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      flexShrink: 0,\n      width: 40,\n      height: 40,\n      fontFamily: theme.typography.fontFamily,\n      fontSize: theme.typography.pxToRem(20),\n      lineHeight: 1,\n      borderRadius: '50%',\n      overflow: 'hidden',\n      userSelect: 'none'\n    },\n\n    /* Styles applied to the root element if there are children and not `src` or `srcSet`. */\n    colorDefault: {\n      color: theme.palette.background[\"default\"],\n      backgroundColor: theme.palette.type === 'light' ? theme.palette.grey[400] : theme.palette.grey[600]\n    },\n\n    /* Styles applied to the img element if either `src` or `srcSet` is defined. */\n    img: {\n      width: '100%',\n      height: '100%',\n      textAlign: 'center',\n      // Handle non-square image. The property isn't supported by IE 11.\n      objectFit: 'cover'\n    }\n  };\n};\nvar Avatar = React.forwardRef(function Avatar(props, ref) {\n  var alt = props.alt,\n      childrenProp = props.children,\n      classes = props.classes,\n      classNameProp = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      imgProps = props.imgProps,\n      sizes = props.sizes,\n      src = props.src,\n      srcSet = props.srcSet,\n      other = _objectWithoutProperties(props, [\"alt\", \"children\", \"classes\", \"className\", \"component\", \"imgProps\", \"sizes\", \"src\", \"srcSet\"]);\n\n  var children = null;\n  var img = src || srcSet;\n\n  if (img) {\n    children = React.createElement(\"img\", _extends({\n      alt: alt,\n      src: src,\n      srcSet: srcSet,\n      sizes: sizes,\n      className: classes.img\n    }, imgProps));\n  } else {\n    children = childrenProp;\n  }\n\n  return React.createElement(Component, _extends({\n    className: clsx(classes.root, classes.system, classNameProp, !img && classes.colorDefault),\n    ref: ref\n  }, other), children);\n});\nprocess.env.NODE_ENV !== \"production\" ? Avatar.propTypes = {\n  /**\n   * Used in combination with `src` or `srcSet` to\n   * provide an alt attribute for the rendered `img` element.\n   */\n  alt: PropTypes.string,\n\n  /**\n   * Used to render icon or text elements inside the Avatar.\n   * `src` and `alt` props will not be used and no `img` will\n   * be rendered by default.\n   *\n   * This can be an element, or just a string.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a DOM element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * Attributes applied to the `img` element if the component\n   * is used to display an image.\n   */\n  imgProps: PropTypes.object,\n\n  /**\n   * The `sizes` attribute for the `img` element.\n   */\n  sizes: PropTypes.string,\n\n  /**\n   * The `src` attribute for the `img` element.\n   */\n  src: PropTypes.string,\n\n  /**\n   * The `srcSet` attribute for the `img` element.\n   */\n  srcSet: PropTypes.string\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiAvatar'\n})(Avatar);"],"sourceRoot":""}